Travail en cours:

-> gridsearch avec lightgbm sans method ensemble créé à la main

-> LGMClassifier personnalisé avec des paramètres différents (dropout, ...)  (RK: la foncion dart met un temps monstrueux, la tester a coté)

A faire:
-> Enlever les colonnes ou il y a trop de monde
-> Rajouter les colonnes drop ps_calc_

Erreurs recontrées:
Sur GradSearch a la main avec lightgbm
  File "/anaconda/envs/py35/lib/python3.5/site-packages/pandas/core/internals.py", line 3666, in set
    loc = self.items.get_loc(item)
  File "/anaconda/envs/py35/lib/python3.5/site-packages/pandas/indexes/base.py", line 2136, in get_loc
    return self._engine.get_loc(self._maybe_cast_indexer(key))
  File "pandas/index.pyx", line 139, in pandas.index.IndexEngine.get_loc (pandas/index.c:4443)
  File "pandas/index.pyx", line 161, in pandas.index.IndexEngine.get_loc (pandas/index.c:4289)
  File "pandas/src/hashtable_class_helper.pxi", line 732, in pandas.hashtable.PyObjectHashTable.get_item (pandas/hashtable.c:13733)
  File "pandas/src/hashtable_class_helper.pxi", line 740, in pandas.hashtable.PyObjectHashTable.get_item (pandas/hashtable.c:13687)


Travail fini:
-> LGBMRegressor    => SCORE ECHEC CRITIQUE, mauvais résultat
-> Pipeline LGBMClassifier    => IMPLEMENTATION ECHEC CRITIQUE, Il faut qu'Ensemble implémente fit, sinon le pipeline pour Gridsearchcv ne marche pas
-> ImproveGradientBoosting avec CVgridsearch  => RUN TIME ECHEC CRITIQUE, trop long car cela ne doit pas etre optimisé (autant travaillé avec lightgbm)




Rk diverses:
-Replace -1 par nan
-Essayer de drop les colonnes ou il y a beaucoup de -1
-Essayer d'autres method de lightgbm  (http://lightgbm.readthedocs.io/en/latest/Python-API.html#lightgbm.LGBMClassifier)
	--CV
	--LGBMRegressor
	--LGBMRanker

Commentaire NewMethod:
-Pk drop les colonnes avec ps_calc_  ?

LGBMClassifier.py  ->   https://www.kaggle.com/arpitajena/top-200-on-lb-0-287-lgbm-avg-of-kernel-outputs
NewMethod2.py  ->  https://www.kaggle.com/the1owl/forza-baseline
